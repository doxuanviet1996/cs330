Only in pintos: diff_source
Only in pintos: .git
diff -urpb pintos/src/devices/timer.c pintos_source/src/devices/timer.c
--- pintos/src/devices/timer.c	2018-03-27 00:40:51.903270746 +0900
+++ pintos_source/src/devices/timer.c	2018-03-27 00:50:08.356272112 +0900
@@ -89,8 +89,11 @@ timer_elapsed (int64_t then)
 void
 timer_sleep (int64_t ticks) 
 {
+  int64_t start = timer_ticks ();
+
   ASSERT (intr_get_level () == INTR_ON);
-  thread_wait(timer_ticks() + ticks);
+  while (timer_elapsed (start) < ticks) 
+    thread_yield ();
 }
 
 /* Sleeps for approximately MS milliseconds.  Interrupts must be
diff -urpb pintos/src/tests/threads/Grading pintos_source/src/tests/threads/Grading
--- pintos/src/tests/threads/Grading	2018-03-26 20:34:27.249705984 +0900
+++ pintos_source/src/tests/threads/Grading	2018-03-27 00:50:08.368272464 +0900
@@ -3,3 +3,4 @@
 
 20.0%	tests/threads/Rubric.alarm
 40.0%	tests/threads/Rubric.priority
+40.0%	tests/threads/Rubric.mlfqs
diff -urpb pintos/src/tests/threads/Make.tests pintos_source/src/tests/threads/Make.tests
--- pintos/src/tests/threads/Make.tests	2018-03-26 20:34:27.413711415 +0900
+++ pintos_source/src/tests/threads/Make.tests	2018-03-27 00:50:08.368272464 +0900
@@ -7,7 +7,9 @@ alarm-negative priority-change priority-
 priority-donate-multiple priority-donate-multiple2			\
 priority-donate-nest priority-donate-sema priority-donate-lower		\
 priority-fifo priority-preempt priority-sema priority-condvar		\
-priority-donate-chain)
+priority-donate-chain                                                   \
+mlfqs-load-1 mlfqs-load-60 mlfqs-load-avg mlfqs-recent-1 mlfqs-fair-2	\
+mlfqs-fair-20 mlfqs-nice-2 mlfqs-nice-10 mlfqs-block)
 
 # Sources for tests.
 tests/threads_SRC  = tests/threads/tests.c
Only in pintos/src/threads: bochsout.txt
Only in pintos/src/threads: bochsrc.txt
Only in pintos/src/threads: build
diff -urpb pintos/src/threads/thread.c pintos_source/src/threads/thread.c
--- pintos/src/threads/thread.c	2018-03-27 00:43:33.176378921 +0900
+++ pintos_source/src/threads/thread.c	2018-03-27 00:50:08.384272933 +0900
@@ -24,10 +24,6 @@
    that are ready to run but not actually running. */
 static struct list ready_list;
 
-/* List of processes in THREAD_BLOCKED state, which are waiting
-   to be wake up by the timer interrupt.*/
-static struct list wait_list;
-
 /* List of all processes.  Processes are added to this list
    when they are first scheduled and removed when they exit. */
 static struct list all_list;
@@ -95,10 +91,8 @@ thread_init (void)
 
   lock_init (&tid_lock);
   list_init (&ready_list);
-  list_init (&wait_list);
   list_init (&all_list);
 
-
   /* Set up a thread structure for the running thread. */
   initial_thread = running_thread ();
   init_thread (initial_thread, "main", PRI_DEFAULT);
@@ -143,22 +137,6 @@ thread_tick (void)
   /* Enforce preemption. */
   if (++thread_ticks >= TIME_SLICE)
     intr_yield_on_return ();
-
-  ;
-
-  int64_t total_ticks = idle_ticks + user_ticks + kernel_ticks;
-
-  struct list_elem *e;
-  for (e = list_begin (&wait_list); e != list_end (&wait_list); e = list_next (e))
-    {
-      struct thread *t = list_entry (e, struct thread, elem);
-      if(t->wakeup_time <= total_ticks)
-      {
-        struct list_elem *e_prev = list_prev(list_remove(e));
-        thread_unblock(t);
-        e = e_prev;
-      }
-    }
 }
 
 /* Prints thread statistics. */
@@ -234,17 +212,6 @@ thread_create (const char *name, int pri
   return tid;
 }
 
-/* Sleep the current thread until timer ticks reach TICKS.*/
-void thread_wait(int64_t ticks)
-{
-  intr_disable();
-  struct thread *t = thread_current ();
-  t->wakeup_time = ticks;
-  list_push_back (&wait_list, &t->elem);
-  thread_block();
-  intr_enable();
-}
-
 /* Puts the current thread to sleep.  It will not be scheduled
    again until awoken by thread_unblock().
 
@@ -501,7 +468,6 @@ init_thread (struct thread *t, const cha
   strlcpy (t->name, name, sizeof t->name);
   t->stack = (uint8_t *) t + PGSIZE;
   t->priority = priority;
-  t->wakeup_time = 0;
   t->magic = THREAD_MAGIC;
   list_push_back (&all_list, &t->allelem);
 }
diff -urpb pintos/src/threads/thread.h pintos_source/src/threads/thread.h
--- pintos/src/threads/thread.h	2018-03-27 00:43:33.176378921 +0900
+++ pintos_source/src/threads/thread.h	2018-03-27 00:50:08.384272933 +0900
@@ -89,7 +89,6 @@ struct thread
     uint8_t *stack;                     /* Saved stack pointer. */
     int priority;                       /* Priority. */
     struct list_elem allelem;           /* List element for all threads list. */
-    int64_t wakeup_time;                /* Checkpoint for waking up if thread is put to sleep.*/
 
     /* Shared between thread.c and synch.c. */
     struct list_elem elem;              /* List element. */
@@ -117,7 +116,6 @@ void thread_print_stats (void);
 typedef void thread_func (void *aux);
 tid_t thread_create (const char *name, int priority, thread_func *, void *);
 
-void thread_wait(int64_t);
 void thread_block (void);
 void thread_unblock (struct thread *);
 
