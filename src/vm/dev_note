Work by files:
swap.c: Done
swap.h: Done
frame.c: Done (if no bug)
frame.h: Done
page.c: Done (spt_load() for file)
page.h: Done
process.c: load_segment() now use spt to ask for frame.
syscall.c: validate pointer user + (later) mmap syscall.
exception.c: ?

Tests to pass:
git pull && make && pintos -v -k -T 60 --qemu  --filesys-size=2 -p build/tests/userprog/args-none -a args-none --swap-size=4 -- -q  -f run args-none
git pull && make && pintos -v -k -T 60 --qemu  --filesys-size=2 -p build/tests/vm/pt-grow-stack -a pt-grow-stack --swap-size=4 -- -q  -f run pt-grow-stack
git pull && make && pintos -v -k -T 60 --qemu  --filesys-size=2 -p build/tests/vm/pt-grow-bad -a pt-grow-bad --swap-size=4 -- -q  -f run pt-grow-bad
git pull && make && pintos -v -k -T 60 --qemu  --filesys-size=2 -p build/tests/userprog/create-bad-ptr -a create-bad-ptr --swap-size=4 -- -q  -f run create-bad-ptr
git pull && make && pintos -v -k -T 60 --qemu  --filesys-size=2 -p build/tests/userprog/bad-read -a bad-read --swap-size=4 -- -q  -f run bad-read
git pull && make && pintos -v -k -T 300 --qemu  --filesys-size=2 -p build/tests/vm/page-linear -a page-linear --swap-size=4 -- -q  -f run page-linear

Work remains:
 - Implement page.c and page.h
 - Frame eviction
 - Refine stack growth: validate user pointer in syscall.c correctly.
 - MMAP.